{"version":3,"sources":["index.js"],"names":["Checksheet","useState","Date","d","today","getMonth","toString","getDate","getFullYear","chapterSums","setChapterSum","subjectList","scheduleList","getDayDiff","a","b","date1","date2","diffTime","Math","abs","ceil","myTotal","reduce","goalNum","length","myProgressString","round","scheduleProgressString","SubjectCards","map","subject","i","indexOf","className","style","fontSize","textLength","baseSize","console","log","getFontSize","onClick","arr","forEach","sub","push","decSum","incSum","TimeStamps","timestamp","left","id","width","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3d825fa.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Checksheet() {\n  const [d, setD] = useState(new Date())\n  const today = (d.getMonth() + 1).toString() + \"/\" + d.getDate().toString() + \"/\" + d.getFullYear().toString()\n\n  const [chapterSums, setChapterSum] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n  let subjectList = [\n    \"初歩からの数学\",\n    \"入門線型代数\",\n    \"哲学・思想を今考える\",\n    \"西洋哲学の起源\",\n    \"初歩からの物理\",\n    \"物理の世界\",\n    \"初歩からの生物学\",\n    \"生命分子と細胞の科学\",\n    \"心理学概論\",\n    \"発達心理学概論\",\n    \"経営学概論\",\n  ]\n\n  const scheduleList = [\n    ['4/8/2021', \"start\"],\n    ['5/14/2021', \"通信指導\"],\n    ['5/28/2021', \"通信指導\"],\n    ['5/31/2021', \"end of read through phase\"],\n    ['6/1/2021', \"過去問、自己学習サイト phase\"],\n    ['7/13/2021', \"単位認定試験 start\"],\n    ['7/20/2021', \"単位認定試験 last day\"],\n  ]\n\n  const getDayDiff = (a, b) => {\n    const date1 = new Date(a);\n    const date2 = new Date(b);\n    const diffTime = Math.abs(date2 - date1);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n    return diffDays\n  }\n  getDayDiff(scheduleList[1][0], scheduleList[2][0])\n\n  let stTotal = getDayDiff(scheduleList[0][0], today) * 3\n  let myTotal = chapterSums.reduce((a, b) => a + b, 0)\n\n  let goalNum = subjectList.length * 15\n  let phaseName = \"read through\"\n  let myProgress =  Math.round((myTotal/goalNum)*1000) / 10\n  let myProgressString = myProgress + \"%\"\n  let scheduleProgress =  Math.round((getDayDiff(today, scheduleList[0][0])/getDayDiff(today, scheduleList[6][0]))*100)\n  let scheduleProgressString = scheduleProgress + \"%\"\n\n\n  const SubjectCards = () => {\n    return (\n      subjectList.map((subject) => {\n        const i = subjectList.indexOf(subject)\n\n        const decSum = () => {\n          let arr = []\n          chapterSums.forEach(sub => {\n            arr.push(sub)\n          })\n          arr[i] -= 1\n          setChapterSum(arr)\n        }\n        const incSum = () => {\n          let arr = []\n          chapterSums.forEach(sub => {\n            arr.push(sub)\n          })\n          arr[i] += 1\n          setChapterSum(arr)\n        }\n\n        const getFontSize = (textLength) => {\n          const baseSize = 18\n          if (textLength >= baseSize) {\n            textLength = baseSize - 2\n          }\n          const fontSize = baseSize - textLength\n          console.log(fontSize)\n          return `${fontSize}px`\n        }\n        \n        return (\n          <div className=\"subject-card\" key={subject}>\n            <div className=\"subject-title\">\n              <p style={{fontSize: getFontSize(subject.length)}}>{subject}</p>\n              {/* <p>{subject}</p> */}\n            </div>\n            <div className=\"card-line\"></div>\n            <div className=\"card-counter\">\n              <i className=\"fas fa-chevron-left\" onClick={() => decSum()}></i>\n              <p>{chapterSums[i]}</p>\n              <i className=\"fas fa-chevron-right\" onClick={() => incSum()}></i>\n            </div>\n          </div>\n        )\n      })\n    )\n  }\n\n  const TimeStamps = () => {\n    return (\n      scheduleList.map(timestamp => {\n        return(\n          <p key={timestamp} style={{left: Math.round((getDayDiff(today, timestamp[0])/getDayDiff(today, scheduleList[6][0]))*100).toString()+\"%\"}}>{ timestamp[0] }</p>\n        )\n      })\n    )\n  }\n\n  return(\n      <div className=\"checksheet\">\n        <p className=\"date\">{ today }</p>\n        <div className=\"checksheet-container\">\n          <div className=\"mychecksheet\">\n            <h2>total: { myTotal }</h2>\n            <div className=\"cards-container\">\n              <SubjectCards />\n            </div>\n            <p>{ myTotal } out of { goalNum } read through: { myProgressString }</p>\n          </div>\n        </div>\n        <div className=\"progress-bars\">\n          <div id=\"myProgress\">\n            <p>{ phaseName } phase</p>\n            <div className=\"timestamps\" id=\"myProgressTimestamps\">\n              <p style={{left: \"0%\"}}>{ scheduleList[0][0] }</p>\n              <p style={{left: Math.round((getDayDiff(today, scheduleList[0][0])/getDayDiff(today, scheduleList[3][0]))*100).toString()+\"%\"}}>{ today } today</p>\n              <p style={{left: \"100%\"}}>{ scheduleList[3][0] }</p>\n            </div>\n            <div className=\"bar\">\n              <div className=\"\" style={{width:myProgressString}}></div>\n              <section className=\"todayBar\" style={{left: Math.round((getDayDiff(today, scheduleList[0][0])/getDayDiff(today, scheduleList[3][0]))*100).toString()+\"%\"}}></section>\n            </div>\n          </div>\n          <div id=\"scheduleProgress\">\n            <div className=\"timestamps\" id=\"scheduleTimestamps\">\n              <TimeStamps />\n            </div>\n            <div className=\"bar\">\n              <div className=\"\" style={{width:scheduleProgressString}}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div className=\"app\">\n        <Checksheet />\n      </div>\n    )\n  }\n}\n\n// ========================================\n// ====  USE STRICTMODE?     ======================\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n"],"sourceRoot":""}